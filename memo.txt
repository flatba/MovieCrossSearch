
ContentInformationModel.class
  thumbnail     サムネイル画像
	title				  タイトル	String
	originalTitle	原題	String
	rereaseYear		公開年	String
	genre				  ジャンル	String
	runningTime		時間	String
	director			監督	String
	summary				あらすじ	String


収集先候補
# hulu
# Netflix 会員ID必要
# Amazon Prime
# Amazon
# GYAO
# dTV
# U-NEXT
# apple iTunes
# Microsoft
# GooglePlay
# MUBI

実装手順

クロールクラス
・トップページ（URL）にアクセスする
・ログインが必要な場合、seleniumでログインする
・動的なページの場合は、PahantomJSを使う
・動画一覧にアクセスする
  ・各動画にアクセスする

スクレイプクラス
・各動画の必要情報を取得する
  title				  タイトル	String
	originalTitle	原題	String
	rereaseYear		公開年	String
	genre				  ジャンル	String
	runningTime		時間	String
	director			監督	String
	summary				あらすじ	String
・取得した情報を配列Aに格納する
・アクセスしたサイトの全ての映画情報を格納する配列Bに配列Aを格納する
・配列BをDBクラスに渡す

DB保存クラス
・スクレイプクラスから受け取った配列Bを展開して、
・DBデータとして保存する（暫定DB:sqlite）


------------------------

WebElement mouseTarget = driver.findElement(:css, 'body > div.vod-mod-content > section > header > div > ul > li > a')

    driver.findElement(By.id("hoge_button")).click();

    WebElement mouseTarget = driver.find_elements(:class_name => "vod-mod-tray__thumbnail::before").first
    mouseTargets.move_to(mouseTarget).perform
    mouseTarget.click

    element = driver.find_element(:class_name, "vod-mod-tray__thumbnail").click
    element.click

    # mouseTargets.each do |mouseTarget|
    #   # puts element
    #   driver.move_to(mouseTarget).perform
    #   driver.manage.timeouts.implicit_wait = 30
    #   mouseTarget.click
    # end


    # mouseTarget.click



    # puts category_url
    # category_doc = openURL(category_url)
    # category_doc.css('body > div.vod-frm--user01 > main > div > section:nth-child(1) > div > div > div.vod-mod-tray__slider.slick-initialized.slick-slider > div > div')

  #   category_doc.css('body > div.vod-frm--user01 > main > div > section:nth-child(1) > div > div > div.vod-mod-tray__slider.slick-initialized.slick-slider > div > div').each { |hogehoge|
  #     puts hogehoge
  # }

